name: Deploy dev Server

on:
  push:
    branches:
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Start MySQL container
        run: docker compose up -d

      - name: Wait for MySQL health check
        run: |
          echo "Waiting for MySQL to start..."
          for i in {1..10}; do
            if docker compose logs | grep "ready for connections"; then
              echo "MySQL is ready!"
              exit 0
            fi
            echo "Waiting... (attempt $i)"
            sleep 10
          done
          echo "MySQL did not start in time."
          docker compose logs
          exit 1

      - name: Build and runs Tests
        run: ./gradlew build
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3308/sejong_life_db?useSSL=false&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
          SPRING_DATASOURCE_USERNAME: root
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.DB_PASSWORD }}
          JWT_SECRET: ${{ secrets.JWT_SECRET_KEY }}

      - name: Stop MySQL container
        if: always()
        run: docker compose down

      - name: Deploy to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          source: "build/libs/*.jar"
          target: "~/sejong-life-dev"

      - name: Execute Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            PORT=8081
            PID=$(lsof -t -i:$PORT || true)
            if [ -n "$PID" ]; then
              echo "Stopping current server with PID: $PID"
              kill -15 $PID
              sleep 5
            fi
            
            echo "Starting new server..."
            nohup java -jar -Dspring.profiles.active=dev ~/sejong-life-dev/*.jar > ~/sejong-life-dev/nohup.out 2>&1 &
            
            echo "Deployment complete."
